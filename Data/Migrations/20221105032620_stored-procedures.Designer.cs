// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(InventarioUTDBContext))]
    [Migration("20221105032620_stored-procedures")]
    partial class storedprocedures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Models.DetalleOrden", b =>
                {
                    b.Property<int>("IdDetalleOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleOrden"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdHerramienta")
                        .HasColumnType("int");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleOrden");

                    b.HasIndex("IdHerramienta");

                    b.HasIndex("IdOrden");

                    b.ToTable("DetalleOrden", (string)null);
                });

            modelBuilder.Entity("Data.Models.Edificio", b =>
                {
                    b.Property<int>("IdEdificio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEdificio"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEdificio");

                    b.ToTable("Edificio", (string)null);
                });

            modelBuilder.Entity("Data.Models.Estatus", b =>
                {
                    b.Property<int>("IdEstatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstatus"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstatus");

                    b.ToTable("Estatus");
                });

            modelBuilder.Entity("Data.Models.Herramienta", b =>
                {
                    b.Property<int>("IdHerramienta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHerramienta"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdEstatus")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<int>("IdTaller")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Urlimagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHerramienta");

                    b.HasIndex("IdEstatus");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdTaller");

                    b.ToTable("Herramienta", (string)null);
                });

            modelBuilder.Entity("Data.Models.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMarca");

                    b.ToTable("Marca", (string)null);
                });

            modelBuilder.Entity("Data.Models.Multa", b =>
                {
                    b.Property<int>("IdMulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMulta"), 1L, 1);

                    b.Property<int>("IdEstatus")
                        .HasColumnType("int");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.HasKey("IdMulta");

                    b.HasIndex("IdEstatus");

                    b.HasIndex("IdOrden");

                    b.ToTable("Multa", (string)null);
                });

            modelBuilder.Entity("Data.Models.Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrden"), 1L, 1);

                    b.Property<int>("IdEstatus")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdOrden");

                    b.HasIndex("IdEstatus");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Orden", (string)null);
                });

            modelBuilder.Entity("Data.Models.Plazo", b =>
                {
                    b.Property<int>("IdPlazo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlazo"), 1L, 1);

                    b.Property<DateTime>("Fin")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPlazo");

                    b.HasIndex("IdOrden");

                    b.ToTable("Plazo", (string)null);
                });

            modelBuilder.Entity("Data.Models.RolUsuario", b =>
                {
                    b.Property<int>("IdRolUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRolUsuario"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRolUsuario");

                    b.ToTable("RolUsuario", (string)null);
                });

            modelBuilder.Entity("Data.Models.Taller", b =>
                {
                    b.Property<int>("IdTaller")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTaller"), 1L, 1);

                    b.Property<string>("Aula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEdificio")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTaller");

                    b.HasIndex("IdEdificio");

                    b.ToTable("Taller", (string)null);
                });

            modelBuilder.Entity("Data.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRolUsuario")
                        .HasColumnType("int");

                    b.Property<int>("Matricula")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRolUsuario");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Data.Models.DetalleOrden", b =>
                {
                    b.HasOne("Data.Models.Herramienta", "Herramienta")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdHerramienta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Orden", "Orden")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Herramienta");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Data.Models.Herramienta", b =>
                {
                    b.HasOne("Data.Models.Estatus", "Estatus")
                        .WithMany("Herramientas")
                        .HasForeignKey("IdEstatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Marca", "Marca")
                        .WithMany("Herramientas")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Taller", "Taller")
                        .WithMany("Herramientas")
                        .HasForeignKey("IdTaller")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estatus");

                    b.Navigation("Marca");

                    b.Navigation("Taller");
                });

            modelBuilder.Entity("Data.Models.Multa", b =>
                {
                    b.HasOne("Data.Models.Estatus", "Estatus")
                        .WithMany("Multas")
                        .HasForeignKey("IdEstatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estatus");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Data.Models.Orden", b =>
                {
                    b.HasOne("Data.Models.Estatus", "Estatus")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEstatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Usuario", "Usuario")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estatus");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Data.Models.Plazo", b =>
                {
                    b.HasOne("Data.Models.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("Data.Models.Taller", b =>
                {
                    b.HasOne("Data.Models.Edificio", "Edificio")
                        .WithMany("Talleres")
                        .HasForeignKey("IdEdificio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edificio");
                });

            modelBuilder.Entity("Data.Models.Usuario", b =>
                {
                    b.HasOne("Data.Models.RolUsuario", "RolUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRolUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolUsuario");
                });

            modelBuilder.Entity("Data.Models.Edificio", b =>
                {
                    b.Navigation("Talleres");
                });

            modelBuilder.Entity("Data.Models.Estatus", b =>
                {
                    b.Navigation("Herramientas");

                    b.Navigation("Multas");

                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("Data.Models.Herramienta", b =>
                {
                    b.Navigation("DetalleOrdenes");
                });

            modelBuilder.Entity("Data.Models.Marca", b =>
                {
                    b.Navigation("Herramientas");
                });

            modelBuilder.Entity("Data.Models.Orden", b =>
                {
                    b.Navigation("DetalleOrdenes");
                });

            modelBuilder.Entity("Data.Models.RolUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Data.Models.Taller", b =>
                {
                    b.Navigation("Herramientas");
                });

            modelBuilder.Entity("Data.Models.Usuario", b =>
                {
                    b.Navigation("Ordenes");
                });
#pragma warning restore 612, 618
        }
    }
}
